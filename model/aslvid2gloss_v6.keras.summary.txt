model file ./aslvid2gloss_v6.keras

batch train size( TRAIN_BATCH ): 2
TOTAL_GLOSS_UNIQ: 2000


input size: (50, 200, 200, 3) with getdata() already in [0.0, 1.0] float32
optimizer: Adam(learning_rate=0.001),
loss: sparse_categorical_crossentropy,
metrics: ['accuracy']
epoch: 2
steps_per_epoch: TOTAL_TRAIN_FILE//TRAIN_BATCH

50            200            200            3
48            198            198            32        <-- (3,3,3) 32   <--- (1,1,1) CNN
16            66             66             32        <-- (3,3,3)      <--- (3,3,3) mp

14            64             64             64        <-- (3,3,3) 64   <--- (1,1,1) CNN
2             8              8              64        <-- (7,8,8)      <--- (7,8,8) mp

1             6              6              256       <-- (2,3,3) 256  <--- (1,1,1) CNN
1             3              3              256       <-- (1,2,2)      <--- (1,2,2) mp

1             1              1              2000      <-- (1,3,3) 2000 <--- (1,1,1) CNN

data_in= Input(
    shape=(QUANTITY_FRAME, IMG_SIZE, IMG_SIZE, 3),
    dtype=float32,
    name='batch_vid'
)



x= Conv3D(
    filters=32,
    kernel_size=(3,3,3),
    strides=(1,1,1),
    padding='valid',
    activation=relu,
    dtype=float32,
    name='conv_1'
)(data_in)
x= MaxPooling3D(
    pool_size=(3,3,3),
    strides=(3,3,3),
    padding='valid',
    dtype=float32,
    name='maxpool_1'
)(x)



x= Conv3D(
    filters=64,
    kernel_size=(3,3,3),
    strides=(1,1,1),
    padding='valid',
    activation=sigmoid,
    dtype=float32,
    name='conv_2'
)(x)
x= MaxPooling3D(
    pool_size=(7,8,8),
    strides=(7,8,8),
    padding='valid',
    dtype=float32,
    name='maxpool_2'
)(x)


x= Conv3D(
    filters=256,
    kernel_size=(2,3,3),
    strides=(1,1,1),
    padding='valid',
    activation=relu,
    dtype=float32,
    name='conv_3'
)(x)
x= MaxPooling3D(
    pool_size=(1,2,2),
    strides=(1,2,2),
    padding='valid',
    dtype=float32,
    name='maxpool_3'
)(x)


x= Conv3D(
    filters=TOTAL_GLOSS_UNIQ,
    kernel_size=(1,3,3),
    strides=(1,1,1),
    padding='valid',
    activation=softmax,
    dtype=float32,
    name='conv_9'
)(x)


data_out= Flatten(
    name='flat_1'
)(x)
